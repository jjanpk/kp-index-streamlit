import streamlit as st
import pandas as pd
import joblib

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•
model = joblib.load("solar_wind_predictor_model.pkl")

st.set_page_config(page_title="Kp Index Predictor", layout="centered")
st.title("üîÆ ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡πà‡∏≤ Kp Index ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏°‡∏™‡∏∏‡∏£‡∏¥‡∏¢‡∏∞")
st.markdown("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡πà‡∏≤‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå Kp")

# ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
with st.form("input_form"):
    col1, col2, col3 = st.columns(3)
    with col1:
        bz = st.number_input("Bz (nT)", value=-5.0, format="%.2f")
    with col2:
        speed = st.number_input("Speed (km/s)", value=400.0, format="%.2f")
    with col3:
        density = st.number_input("Density (N/cm¬≥)", value=8.0, format="%.2f")

    submitted = st.form_submit_button("üîç ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡πà‡∏≤ Kp")

if submitted:
    new_data = pd.DataFrame([{"Bz": bz, "Speed": speed, "Density": density}])
    new_data["Speed_Density_Ratio"] = new_data["Speed"] / (new_data["Density"] + 1e-6)
    new_data["Bz_Squared"] = new_data["Bz"] ** 2
    new_data["Energy_Flux"] = (new_data["Speed"] ** 2) * new_data["Density"]

    prediction = model.predict(new_data)[0]

    st.success(f"‡∏Ñ‡πà‡∏≤‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå Kp Index ‡∏Ñ‡∏∑‡∏≠: {prediction:.2f}")

    if prediction < 10:
        st.info("üü¢ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢")
    elif prediction < 30:
        st.warning("üü† ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á")
    else:
        st.error("üî¥ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏™‡∏π‡∏á! ‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏à‡∏≤‡∏Å‡∏û‡∏≤‡∏¢‡∏∏‡∏™‡∏∏‡∏£‡∏¥‡∏¢‡∏∞")
